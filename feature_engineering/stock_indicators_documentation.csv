type,name,url,function_definition,parameters,return
Price trends,ATR Trailing Stop,https://python.stockindicators.dev/indicators/AtrStop/#content,"""get_atr_stop(quotes, lookback_periods=21, multiplier=3, end_type=EndType.CLOSE)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 21"", ""notes"": ""Number of periods (N) for the ATR evaluation. Must be greater than 1.""}, {""name"": ""multiplier"", ""type"": ""float, default 3"", ""notes"": ""Multiplier sets the ATR band width. Must be greater than 0 and is usually set around 2 to 3.""}, {""name"": ""end_type"", ""type"": ""EndType, default EndType.Close"", ""notes"": ""Determines whether Close or High/Low is used as basis for stop offset. See EndType options below.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""atr_stop"", ""type"": ""Decimal, Optional"", ""notes"": ""ATR Trailing Stop line contains both Upper and Lower segments""}, {""name"": ""buy_stop"", ""type"": ""Decimal, Optional"", ""notes"": ""Upper band only (green)""}, {""name"": ""sell_stop"", ""type"": ""Decimal, Optional"", ""notes"": ""Lower band only (red)""}]"
Price trends,Aroon,https://python.stockindicators.dev/indicators/Aroon/#content,"""get_aroon(quotes, lookback_periods=25)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 25"", ""notes"": ""Number of periods (N) for the lookback evaluation. Must be greater than 0.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""aroon_up"", ""type"": ""float, Optional"", ""notes"": ""Based on last High price""}, {""name"": ""aroon_down"", ""type"": ""float, Optional"", ""notes"": ""Based on last Low price""}, {""name"": ""oscillator"", ""type"": ""float, Optional"", ""notes"": ""AroonUp - AroonDown""}]"
Price trends,Average Directional Index (ADX),https://python.stockindicators.dev/indicators/Adx/#content,"""get_adx(quotes, lookback_periods=14)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 14"", ""notes"": ""Number of periods (N) for the lookback evaluation. Must be greater than 0.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""pdi"", ""type"": ""float, Optional"", ""notes"": ""Plus Directional Index (+DI)""}, {""name"": ""mdi"", ""type"": ""float, Optional"", ""notes"": ""Minus Directional Index (-DI)""}, {""name"": ""adx"", ""type"": ""float, Optional"", ""notes"": ""Average Directional Index (ADX)""}, {""name"": ""adxr"", ""type"": ""float, Optional"", ""notes"": ""Average Directional Index Rating (ADXR)""}]"
Price trends,Directional Movement Index (DMI),https://python.stockindicators.dev/indicators/Adx/#content,"""get_adx(quotes, lookback_periods=14)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 14"", ""notes"": ""Number of periods (N) for the lookback evaluation. Must be greater than 0.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""pdi"", ""type"": ""float, Optional"", ""notes"": ""Plus Directional Index (+DI)""}, {""name"": ""mdi"", ""type"": ""float, Optional"", ""notes"": ""Minus Directional Index (-DI)""}, {""name"": ""adx"", ""type"": ""float, Optional"", ""notes"": ""Average Directional Index (ADX)""}, {""name"": ""adxr"", ""type"": ""float, Optional"", ""notes"": ""Average Directional Index Rating (ADXR)""}]"
Price trends,Elder-ray Index,https://python.stockindicators.dev/indicators/ElderRay/#content,"""get_elder_ray(quotes, lookback_periods=13)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 13"", ""notes"": ""Number of periods (N) for the underlying EMA evaluation. Must be greater than 0.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""ema"", ""type"": ""float, Optional"", ""notes"": ""Exponential moving average of Close price""}, {""name"": ""bull_power"", ""type"": ""float, Optional"", ""notes"": ""Bull Power""}, {""name"": ""bear_power"", ""type"": ""float, Optional"", ""notes"": ""Bear Power""}]"
Price trends,Gator Oscillator,https://python.stockindicators.dev/indicators/Gator/#content,"""get_gator(quotes: Iterable[Quote])""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote] or Iterable[AlligatorResult]"", ""notes"": ""Iterable of the Quote or Alligator Result.  \u2022 See here for usage with pandas.DataFrame""}]",[]
Price trends,Hurst Exponent,https://python.stockindicators.dev/indicators/Hurst/#content,"""get_hurst(quotes, lookback_periods=100)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 100"", ""notes"": ""Number of periods (N) in the Hurst Analysis. Must be greater than 20.""}]",[]
Price trends,Ichimoku Cloud,https://python.stockindicators.dev/indicators/Ichimoku/#content,"""get_ichimoku(quotes, tenkan_periods=9, kijun_periods=26, senkou_b_periods=52)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""tenkan_periods"", ""type"": ""int, default 9"", ""notes"": ""Number of periods (T) in the Tenkan-sen midpoint evaluation. Must be greater than 0.""}, {""name"": ""kijun_periods"", ""type"": ""int, default 26"", ""notes"": ""Number of periods (K) in the shorter Kijun-sen midpoint evaluation. Must be greater than 0.""}, {""name"": ""senkou_b_periods"", ""type"": ""int, default 52"", ""notes"": ""Number of periods (S) in the longer Senkou leading span B midpoint evaluation. Must be greater than K.""}, {""name"": ""offset_periods"", ""type"": ""int"", ""notes"": ""Number of periods to offset both Senkou and Chikou spans. Must be non-negative. Default is kijun_periods.""}, {""name"": ""senkou_offset"", ""type"": ""int"", ""notes"": ""Number of periods to offset the Senkou span. Must be non-negative. Default is kijun_periods.""}, {""name"": ""chikou_offset"", ""type"": ""int"", ""notes"": ""Number of periods to offset the Chikou span. Must be non-negative. Default is kijun_periods.""}]",[]
Price trends,Moving Average Convergence / Divergence (MACD),https://python.stockindicators.dev/indicators/Macd/#content,"""get_macd(quotes, fast_periods=12, slow_periods=26, signal_periods=9)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""fast_periods"", ""type"": ""int, default 12"", ""notes"": ""Number of periods (F) for the faster moving average. Must be greater than 0.""}, {""name"": ""slow_periods"", ""type"": ""int, default 26"", ""notes"": ""Number of periods (S) for the slower moving average. Must be greater than fast_periods.""}, {""name"": ""signal_periods"", ""type"": ""int, default 9"", ""notes"": ""Number of periods (P) for the moving average of MACD. Must be greater than or equal to 0.""}, {""name"": ""candle_part"", ""type"": ""CandlePart, default CandlePart.CLOSE"", ""notes"": ""Specify candle part to evaluate. See CandlePart options below.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""macd"", ""type"": ""float, Optional"", ""notes"": ""The MACD line is the difference between slow and fast moving averages (macd = fast_ema - slow_ema)""}, {""name"": ""signal"", ""type"": ""float, Optional"", ""notes"": ""Moving average of the macd line""}, {""name"": ""histogram"", ""type"": ""float, Optional"", ""notes"": ""Gap between of the macd and signal line""}, {""name"": ""fast_ema"", ""type"": ""float, Optional"", ""notes"": ""Fast Exponential Moving Average""}, {""name"": ""slow_ema"", ""type"": ""float, Optional"", ""notes"": ""Slow Exponential Moving Average""}]"
Price trends,SuperTrend,https://python.stockindicators.dev/indicators/SuperTrend/#content,"""get_super_trend(quotes, lookback_periods=10, multiplier=3)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 10"", ""notes"": ""Number of periods (N) for the ATR evaluation. Must be greater than 1 and is usually set between 7 and 14.""}, {""name"": ""multiplier"", ""type"": ""float, default 3"", ""notes"": ""Multiplier sets the ATR band width. Must be greater than 0 and is usually set around 2 to 3.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""super_trend"", ""type"": ""Decimal, Optional"", ""notes"": ""SuperTrend line contains both Upper and Lower segments""}, {""name"": ""upper_band"", ""type"": ""Decimal, Optional"", ""notes"": ""Upper band only (bearish/red)""}, {""name"": ""lower_band"", ""type"": ""Decimal, Optional"", ""notes"": ""Lower band only (bullish/green)""}]"
Price trends,Vortex Indicator (VI),https://python.stockindicators.dev/indicators/Vortex/#content,"""get_vortex(quotes, lookback_periods)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int"", ""notes"": ""Number of periods (N) to consider. Must be greater than 1 and is usually between 14 and 30.""}]",[]
Price trends,Williams Alligator,https://python.stockindicators.dev/indicators/Alligator/#content,"""get_alligator(quotes, jaw_periods==13, jaw_offset=8, teeth_periods=8, teeth_offset=5, lips_periods=5, lips_offset=3)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""jaw_periods"", ""type"": ""int, default 13"", ""notes"": ""Number of periods (JP) for the Jaw moving average. Must be greater than teeth_periods.""}, {""name"": ""jaw_offset"", ""type"": ""int, default 8"", ""notes"": ""Number of periods (JO) for the Jaw offset. Must be greater than 0.""}, {""name"": ""teeth_periods"", ""type"": ""int, default 8"", ""notes"": ""Number of periods (TP) for the Teeth moving average. Must be greater than lips_periods.""}, {""name"": ""teeth_offset"", ""type"": ""int, default 5"", ""notes"": ""Number of periods (TO) for the Teeth offset. Must be greater than 0.""}, {""name"": ""lips_periods"", ""type"": ""int, default 5"", ""notes"": ""Number of periods (LP) for the Lips moving average. Must be greater than 0.""}, {""name"": ""lips_offset"", ""type"": ""int, default 3"", ""notes"": ""Number of periods (LO) for the Lips offset. Must be greater than 0.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""jaw"", ""type"": ""float, Optional"", ""notes"": ""Alligator\u2019s Jaw""}, {""name"": ""teeth"", ""type"": ""float, Optional"", ""notes"": ""Alligator\u2019s Teeth""}, {""name"": ""lips"", ""type"": ""float, Optional"", ""notes"": ""Alligator\u2019s Lips""}]"
Price channels,Bollinger Bands庐,https://python.stockindicators.dev/indicators/BollingerBands/#content,"""get_bollinger_bands(quotes, lookback_periods=20, standard_deviations=2)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 20"", ""notes"": ""Number of periods (N) for the center line moving average. Must be greater than 1 to calculate; however we suggest a larger period for statistically appropriate sample size.""}, {""name"": ""standard_deviations"", ""type"": ""int, default 2"", ""notes"": ""Width of bands. Standard deviations (D) from the moving average. Must be greater than 0.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""sma"", ""type"": ""float, Optional"", ""notes"": ""Simple moving average (SMA) of Close price (center line)""}, {""name"": ""upper_band"", ""type"": ""float, Optional"", ""notes"": ""Upper line is D standard deviations above the SMA""}, {""name"": ""lower_band"", ""type"": ""float, Optional"", ""notes"": ""Lower line is D standard deviations below the SMA""}, {""name"": ""percent_b"", ""type"": ""float, Optional"", ""notes"": ""%B is the location within the bands. (Price-lower_band)/(upper_band-lower_band)""}, {""name"": ""z_score"", ""type"": ""float, Optional"", ""notes"": ""Z-Score of current Close price (number of standard deviations from mean)""}, {""name"": ""width"", ""type"": ""float, Optional"", ""notes"": ""Width as percent of SMA price. (upper_band-lower_band)/sma""}]"
Price channels,Donchian Channels,https://python.stockindicators.dev/indicators/Donchian/#content,"""get_donchian(quotes, lookback_periods=20)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 20"", ""notes"": ""Number of periods (N) for lookback period. Must be greater than 0 to calculate; however we suggest a larger value for an appropriate sample size.""}]",[]
Price channels,Fractal Chaos Bands (FCB),https://python.stockindicators.dev/indicators/Fcb/#content,"""get_fcb(quotes, window_span=2)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""window_span"", ""type"": ""int"", ""notes"": ""Fractal evaluation window span width (S). Must be at least 2. Default is 2.""}]",[]
Price channels,Keltner Channels,https://python.stockindicators.dev/indicators/Keltner/#content,"""get_keltner(quotes, ema_periods=20, multiplier=2.0, atr_periods=10)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""ema_periods"", ""type"": ""int, default 20"", ""notes"": ""Number of lookback periods (E) for the center line moving average. Must be greater than 1 to calculate.""}, {""name"": ""multiplier"", ""type"": ""float, default 2.0"", ""notes"": ""ATR Multiplier. Must be greater than 0.""}, {""name"": ""atr_periods"", ""type"": ""int, default 10"", ""notes"": ""Number of lookback periods (A) for the Average True Range. Must be greater than 1 to calculate.""}]",[]
Price channels,Moving Average Envelopes,https://python.stockindicators.dev/indicators/MaEnvelopes/#content,"""get_ma_envelopes(quotes, lookback_periods, percent_offset=2.5, ma_type=MAType.SMA)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int"", ""notes"": ""Number of periods (N) in the moving average. Must be greater than 1.""}, {""name"": ""percent_offset"", ""type"": ""float, default 2.5"", ""notes"": ""Percent offset for envelope width. Example: 3.5% would be entered as 3.5 (not 0.035). Must be greater than 0. Typical values range from 2 to 10.""}, {""name"": ""ma_type"", ""type"": ""MAType, default MAType.SMA"", ""notes"": ""Type of moving average (e.g. SMA, EMA, HMA). See MAType options below.""}]",[]
Price channels,Pivot Points,https://python.stockindicators.dev/indicators/PivotPoints/#content,"""get_pivot_points(quotes, window_size, point_type=PivotPointType.STANDARD)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""window_size"", ""type"": ""PeriodSize"", ""notes"": ""Size of the lookback window. See PeriodSize options below.""}, {""name"": ""point_type"", ""type"": ""PivotPointType, default PivotPointType.STANDARD"", ""notes"": ""Type of Pivot Point. See PivotPointType options below.""}]",[]
Price channels,Price Channels,https://python.stockindicators.dev/indicators/Donchian/#content,"""get_donchian(quotes, lookback_periods=20)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 20"", ""notes"": ""Number of periods (N) for lookback period. Must be greater than 0 to calculate; however we suggest a larger value for an appropriate sample size.""}]",[]
Price channels,Rolling Pivot Points,https://python.stockindicators.dev/indicators/RollingPivots/#content,"""get_rolling_pivots(quotes, window_periods, offset_periods, point_type=PivotPointType.STANDARD)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""window_periods"", ""type"": ""int"", ""notes"": ""Number of periods (W) in the evaluation window. Must be greater than 0 to calculate; but is typically specified in the 5-20 range.""}, {""name"": ""offset_periods"", ""type"": ""int"", ""notes"": ""Number of periods (F) to offset the window from the current period. Must be greater than or equal to 0 and is typically less than or equal to W.""}, {""name"": ""point_type"", ""type"": ""PivotPointType, default PivotPointType.STANDARD"", ""notes"": ""Type of Pivot Point. See PivotPointType options below.""}]",[]
Price channels,STARC Bands,https://python.stockindicators.dev/indicators/StarcBands/#content,"""get_starc_bands(quotes, sma_periods=20, multiplier=2.0, atr_periods=10)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""sma_periods"", ""type"": ""int"", ""notes"": ""Number of lookback periods (S) for the center line moving average. Must be greater than 1 to calculate and is typically between 5 and 10.""}, {""name"": ""multiplier"", ""type"": ""float, default 2.0"", ""notes"": ""ATR Multiplier. Must be greater than 0.""}, {""name"": ""atr_periods"", ""type"": ""int, default 10"", ""notes"": ""Number of lookback periods (A) for the Average True Range. Must be greater than 1 to calculate and is typically the same value as sma_periods.""}]",[]
Price channels,Standard Deviation Channels,https://python.stockindicators.dev/indicators/StdDevChannels/#content,"""get_stdev_channels(quotes, lookback_periods=20, standard_deviations=2)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, Optional, default 20"", ""notes"": ""Size (N) of the evaluation window. Must be None or greater than 1 to calculate. A None value will produce a full quotes evaluation window (see below).""}, {""name"": ""standard_deviations"", ""type"": ""int, default 2"", ""notes"": ""Width of bands. Standard deviations (D) from the regression line. Must be greater than 0. Default is 2.""}]",[]
Oscillators,Awesome Oscillator (AO),https://python.stockindicators.dev/indicators/Awesome/#content,"""get_awesome(quotes, fast_periods=5, slow_periods=34)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""fast_periods"", ""type"": ""int, default 5"", ""notes"": ""Number of periods (F) for the faster moving average. Must be greater than 0.""}, {""name"": ""slow_periods"", ""type"": ""int, default 34"", ""notes"": ""Number of periods (S) for the slower moving average. Must be greater than fast_periods.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""oscillator"", ""type"": ""float, Optional"", ""notes"": ""Awesome Oscillator""}, {""name"": ""normalized"", ""type"": ""float, Optional"", ""notes"": ""100 \u00d7 oscillator \u00f7 (median price)""}]"
Oscillators,Chande Momentum Oscillator (CMO),https://python.stockindicators.dev/indicators/Cmo/#content,"""get_cmo(quotes, lookback_periods)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int"", ""notes"": ""Number of periods (N) in the lookback window. Must be greater than 0.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""cmo"", ""type"": ""float, Optional"", ""notes"": ""Chande Momentum Oscillator""}]"
Oscillators,Commodity Channel Index (CCI),https://python.stockindicators.dev/indicators/Cci/#content,"""get_cci(quotes, lookback_periods=20)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 20"", ""notes"": ""Number of periods (N) in the moving average. Must be greater than 0.""}]",[]
Oscillators,ConnorsRSI,https://python.stockindicators.dev/indicators/ConnorsRsi/#content,"""get_connors_rsi(quotes, rsi_periods=3, streak_periods=2, rank_periods=100)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""rsi_periods"", ""type"": ""int, default 3"", ""notes"": ""Lookback period (R) for the close price RSI. Must be greater than 1.""}, {""name"": ""streak_periods"", ""type"": ""int, default 2"", ""notes"": ""Lookback period (S) for the streak RSI. Must be greater than 1.""}, {""name"": ""rank_periods"", ""type"": ""int, default 100"", ""notes"": ""Lookback period (P) for the Percentile Rank. Must be greater than 1.""}]",[]
Oscillators,Detrended Price Oscillator (DPO),https://python.stockindicators.dev/indicators/Dpo/#content,"""get_dpo(quotes, lookback_periods)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int"", ""notes"": ""Number of periods (N) in the moving average. Must be greater than 0.""}]",[]
Oscillators,KDJ Index,https://python.stockindicators.dev/indicators/Stoch/#content,"""get_stoch(quotes, lookback_periods=14, signal_periods=3, smooth_periods=3, k_factor=3, d_factor=2, ma_type=MAType.SMA)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 14"", ""notes"": ""Lookback period (N) for the oscillator (%K). Must be greater than 0.""}, {""name"": ""signal_periods"", ""type"": ""int, default 3"", ""notes"": ""Smoothing period for the signal (%D). Must be greater than 0.""}, {""name"": ""smooth_periods"", ""type"": ""int, default 3"", ""notes"": ""Smoothing period (S) for the Oscillator (%K). \u201cSlow\u201d stochastic uses 3, \u201cFast\u201d stochastic uses 1. Must be greater than 0.""}, {""name"": ""k_factor"", ""type"": ""int, default 3"", ""notes"": ""Weight of %K in the %J calculation. Must be greater than 0.""}, {""name"": ""d_factor"", ""type"": ""int, default 2"", ""notes"": ""Weight of %D in the %J calculation. Must be greater than 0.""}, {""name"": ""ma_type"", ""type"": ""MAType, default MAType.SMA"", ""notes"": ""Type of moving average (SMA or SMMA) used for smoothing. See MAType options below.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""oscillator or k"", ""type"": ""float, Optional"", ""notes"": ""%K Oscillator over prior N lookback periods""}, {""name"": ""signal or d"", ""type"": ""float, Optional"", ""notes"": ""%D Simple moving average of Oscillator""}, {""name"": ""percent_j or j"", ""type"": ""float, Optional"", ""notes"": ""%J is the weighted divergence of %K and %D: %J=kFactor\u00d7%K-dFactor\u00d7%D""}]"
Oscillators,Relative Strength Index (RSI),https://python.stockindicators.dev/indicators/Rsi/#content,"""get_rsi(quotes, lookback_periods=14)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 14"", ""notes"": ""Number of periods (N) in the lookback period. Must be greater than 0.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""rsi"", ""type"": ""float, Optional"", ""notes"": ""RSI over prior N lookback periods""}]"
Oscillators,Schaff Trend Cycle,https://python.stockindicators.dev/indicators/Stc/#content,"""get_stc(quotes, cycle_periods=10, fast_periods=23, slow_periods=50)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""cycle_periods"", ""type"": ""int, default 10"", ""notes"": ""Number of periods (C) for the Trend Cycle. Must be greater than or equal to 0.""}, {""name"": ""fast_periods"", ""type"": ""int, default 23"", ""notes"": ""Number of periods (F) for the faster moving average. Must be greater than 0.""}, {""name"": ""slow_periods"", ""type"": ""int, default 50"", ""notes"": ""Number of periods (S) for the slower moving average. Must be greater than fast_periods.""}]",[]
Oscillators,Stochastic Momentum Index (SMI),https://python.stockindicators.dev/indicators/Smi/#content,"""get_smi(quotes, lookback_periods, first_smooth_periods, second_smooth_periods, signal_periods=3)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 13"", ""notes"": ""Lookback period (N) for the stochastic. Must be greater than 0.""}, {""name"": ""first_smooth_periods"", ""type"": ""int, default 25"", ""notes"": ""First smoothing factor lookback. Must be greater than 0.""}, {""name"": ""second_smooth_periods"", ""type"": ""int, default 2"", ""notes"": ""Second smoothing factor lookback. Must be greater than 0.""}, {""name"": ""signal_periods"", ""type"": ""int, default 3"", ""notes"": ""EMA of SMI lookback periods. Must be greater than 0.""}]",[]
Oscillators,Stochastic Oscillator,https://python.stockindicators.dev/indicators/Stoch/#content,"""get_stoch(quotes, lookback_periods=14, signal_periods=3, smooth_periods=3, k_factor=3, d_factor=2, ma_type=MAType.SMA)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 14"", ""notes"": ""Lookback period (N) for the oscillator (%K). Must be greater than 0.""}, {""name"": ""signal_periods"", ""type"": ""int, default 3"", ""notes"": ""Smoothing period for the signal (%D). Must be greater than 0.""}, {""name"": ""smooth_periods"", ""type"": ""int, default 3"", ""notes"": ""Smoothing period (S) for the Oscillator (%K). \u201cSlow\u201d stochastic uses 3, \u201cFast\u201d stochastic uses 1. Must be greater than 0.""}, {""name"": ""k_factor"", ""type"": ""int, default 3"", ""notes"": ""Weight of %K in the %J calculation. Must be greater than 0.""}, {""name"": ""d_factor"", ""type"": ""int, default 2"", ""notes"": ""Weight of %D in the %J calculation. Must be greater than 0.""}, {""name"": ""ma_type"", ""type"": ""MAType, default MAType.SMA"", ""notes"": ""Type of moving average (SMA or SMMA) used for smoothing. See MAType options below.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""oscillator or k"", ""type"": ""float, Optional"", ""notes"": ""%K Oscillator over prior N lookback periods""}, {""name"": ""signal or d"", ""type"": ""float, Optional"", ""notes"": ""%D Simple moving average of Oscillator""}, {""name"": ""percent_j or j"", ""type"": ""float, Optional"", ""notes"": ""%J is the weighted divergence of %K and %D: %J=kFactor\u00d7%K-dFactor\u00d7%D""}]"
Oscillators,Stochastic RSI,https://python.stockindicators.dev/indicators/StochRsi/#content,"""get_stoch_rsi(quotes, rsi_periods, stoch_periods, signal_periods, smooth_periods=1)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""rsi_periods"", ""type"": ""int"", ""notes"": ""Number of periods (R) in the lookback period. Must be greater than 0. Standard is 14.""}, {""name"": ""stoch_periods"", ""type"": ""int"", ""notes"": ""Number of periods (S) in the lookback period. Must be greater than 0. Typically the same value as rsi_periods.""}, {""name"": ""signal_periods"", ""type"": ""int"", ""notes"": ""Number of periods (G) in the signal line (SMA of the StochRSI). Must be greater than 0. Typically 3-5.""}, {""name"": ""smooth_periods"", ""type"": ""int, default 1"", ""notes"": ""Smoothing periods (M) for the Stochastic. Must be greater than 0.""}]",[]
Oscillators,Triple EMA Oscillator (TRIX),https://python.stockindicators.dev/indicators/Trix/#content,"""get_trix(quotes, lookback_periods, signal_periods=None)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int"", ""notes"": ""Number of periods (N) in each of the the exponential moving averages. Must be greater than 0.""}, {""name"": ""signal_periods"", ""type"": ""int, Optional"", ""notes"": ""Number of periods in the moving average of TRIX. Must be greater than 0, if specified.""}]",[]
Oscillators,Ultimate Oscillator,https://python.stockindicators.dev/indicators/Ultimate/#content,"""get_ultimate(quotes, short_periods=7, middle_periods=14, long_periods=28)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""short_periods"", ""type"": ""int, default 7"", ""notes"": ""Number of periods (S) in the short lookback. Must be greater than 0.""}, {""name"": ""middle_periods"", ""type"": ""int, default 14"", ""notes"": ""Number of periods (M) in the middle lookback. Must be greater than S.""}, {""name"": ""long_periods"", ""type"": ""int, default 28"", ""notes"": ""Number of periods (L) in the long lookback. Must be greater than M.""}]",[]
Oscillators,Williams %R,https://python.stockindicators.dev/indicators/WilliamsR/#content,"""get_williams_r(quotes, lookback_periods=14)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 14"", ""notes"": ""Number of periods (N) in the lookback period. Must be greater than 0. Default is 14.""}]",[]
Stop and reverse,Chandelier Exit,https://python.stockindicators.dev/indicators/Chandelier/#content,"""get_chandelier(quotes, lookback_periods=22, multiplier=3.0, chandelier_type=ChandelierType.LONG)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 22"", ""notes"": ""Number of periods (N) for the lookback evaluation.""}, {""name"": ""multiplier"", ""type"": ""float, default 3.0"", ""notes"": ""Multiplier number must be a positive value.""}, {""name"": ""chandelier_type"", ""type"": ""ChandelierType, default ChandelierType.LONG"", ""notes"": ""Direction of exit. See ChandelierType options below.""}]",[]
Stop and reverse,Parabolic SAR,https://python.stockindicators.dev/indicators/ParabolicSar/#content,"""get_parabolic_sar(quotes, acceleration_step=0.02, max_acceleration_factor=0.2)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""acceleration_step"", ""type"": ""float, default 0.02"", ""notes"": ""Incremental step size for the Acceleration Factor. Must be greater than 0.""}, {""name"": ""max_acceleration_factor"", ""type"": ""float, default 0.2"", ""notes"": ""Maximum factor limit. Must be greater than acceleration_step.""}, {""name"": ""initial_factor"", ""type"": ""float"", ""notes"": ""Initial Acceleration Factor. Must be greater than 0 and not larger than max_acceleration_factor. Default is acceleration_step.""}]",[]
Stop and reverse,SuperTrend,https://python.stockindicators.dev/indicators/SuperTrend/#content,"""get_super_trend(quotes, lookback_periods=10, multiplier=3)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 10"", ""notes"": ""Number of periods (N) for the ATR evaluation. Must be greater than 1 and is usually set between 7 and 14.""}, {""name"": ""multiplier"", ""type"": ""float, default 3"", ""notes"": ""Multiplier sets the ATR band width. Must be greater than 0 and is usually set around 2 to 3.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""super_trend"", ""type"": ""Decimal, Optional"", ""notes"": ""SuperTrend line contains both Upper and Lower segments""}, {""name"": ""upper_band"", ""type"": ""Decimal, Optional"", ""notes"": ""Upper band only (bearish/red)""}, {""name"": ""lower_band"", ""type"": ""Decimal, Optional"", ""notes"": ""Lower band only (bullish/green)""}]"
Stop and reverse,Volatility Stop,https://python.stockindicators.dev/indicators/VolatilityStop/#content,"""get_volatility_stop(quotes, lookback_periods=7, multiplier=3)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 7"", ""notes"": ""Number of periods (N) ATR lookback window. Must be greater than 1.""}, {""name"": ""multiplier"", ""type"": ""float, default 3"", ""notes"": ""ATR multiplier for the offset. Must be greater than 0.""}]",[]
Candlestick patterns,Doji (Preview),https://python.stockindicators.dev/indicators/Doji/#content,"""get_doji(quotes, max_price_change_percent=0.1)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""max_price_change_percent"", ""type"": ""float, default 0.1"", ""notes"": ""Optional. Maximum absolute percent difference in open and close price. Example: 0.3% would be entered as 0.3 (not 0.003). Must be between 0 and 0.5 percent, if specified.""}]",[]
Candlestick patterns,Marubozu (Preview),https://python.stockindicators.dev/indicators/Marubozu/#content,"""get_marubozu(quotes, min_body_percent=95)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""min_body_percent"", ""type"": ""float, default 95"", ""notes"": ""Optional. Minimum body size as a percent of total candle size. Example: 85% would be entered as 85 (not 0.85). Must be between 80 and 100, if specified.""}]",[]
Volume-based,Accumulation / Distribution Line (ADL),https://python.stockindicators.dev/indicators/Adl/#content,"""get_adl(quotes, sma_periods=None)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""sma_periods"", ""type"": ""int, Optional"", ""notes"": ""Number of periods (N) in the moving average of ADL. Must be greater than 0, if specified.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""money_flow_multiplier"", ""type"": ""float, Optional"", ""notes"": ""Money Flow Multiplier""}, {""name"": ""money_flow_volume"", ""type"": ""float, Optional"", ""notes"": ""Money Flow Volume""}, {""name"": ""adl"", ""type"": ""float"", ""notes"": ""Accumulation Distribution Line (ADL)""}, {""name"": ""adl_sma"", ""type"": ""float, Optional"", ""notes"": ""Moving average (SMA) of ADL based on sma_periods periods, if specified""}]"
Volume-based,Chaikin Money Flow (CMF),https://python.stockindicators.dev/indicators/Cmf/#content,"""get_cmf(quotes, lookback_periods=20)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 20"", ""notes"": ""Number of periods (N) in the moving average. Must be greater than 0.""}]",[]
Volume-based,Chaikin Oscillator,https://python.stockindicators.dev/indicators/ChaikinOsc/#content,"""get_chaikin_osc(quotes, fast_periods=3, slow_periods=10)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""fast_periods"", ""type"": ""int, default 3"", ""notes"": ""Number of periods (F) in the ADL fast EMA. Must be greater than 0 and smaller than S.""}, {""name"": ""slow_periods"", ""type"": ""int, default 10"", ""notes"": ""Number of periods (S) in the ADL slow EMA. Must be greater F.""}]",[]
Volume-based,Force Index,https://python.stockindicators.dev/indicators/ForceIndex/#content,"""get_force_index(quotes, lookback_periods)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int"", ""notes"": ""Lookback window (N) for the EMA of Force Index. Must be greater than 0 and is commonly 2 or 13 (shorter/longer view).""}]",[]
Volume-based,Klinger Volume Oscillator,https://python.stockindicators.dev/indicators/Kvo/#content,"""get_kvo(quotes, fast_periods=34, slow_periods=55, signal_periods=13)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""fast_periods"", ""type"": ""int, default 34"", ""notes"": ""Number of lookback periods (F) for the short-term EMA. Must be greater than 2.""}, {""name"": ""slow_periods"", ""type"": ""int, default 55"", ""notes"": ""Number of lookback periods (L) for the long-term EMA. Must be greater than F.""}, {""name"": ""signal_periods"", ""type"": ""int, default 13"", ""notes"": ""Number of lookback periods for the signal line. Must be greater than 0.""}]",[]
Volume-based,Money Flow Index (MFI),https://python.stockindicators.dev/indicators/Mfi/#content,"""get_mfi(quotes, lookback_periods=14)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 14"", ""notes"": ""Number of periods (N) in the lookback period. Must be greater than 1.""}]",[]
Volume-based,On-Balance Volume (OBV),https://python.stockindicators.dev/indicators/Obv/#content,"""get_obv(quotes, sma_periods=None)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""sma_periods"", ""type"": ""int, Optional"", ""notes"": ""Number of periods (N) in the moving average of OBV. Must be greater than 0, if specified.""}]",[]
Volume-based,Percentage Volume Oscillator (PVO),https://python.stockindicators.dev/indicators/Pvo/#content,"""get_pvo(quotes, fast_periods=12, slow_periods=26, signal_periods=9)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""fast_periods"", ""type"": ""int, default 12"", ""notes"": ""Number of periods (F) for the faster moving average. Must be greater than 0.""}, {""name"": ""slow_periods"", ""type"": ""int, default 26"", ""notes"": ""Number of periods (S) for the slower moving average. Must be greater than fast_periods.""}, {""name"": ""signal_periods"", ""type"": ""int, default 9"", ""notes"": ""Number of periods (P) for the moving average of PVO. Must be greater than or equal to 0.""}]",[]
Moving averages,Arnaud Legoux Moving Average (ALMA),https://python.stockindicators.dev/indicators/Alma/#content,"""get_alma(quotes, lookback_periods=9, offset=0.85, sigma=6)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 9"", ""notes"": ""Number of periods (N) in the moving average. Must be greater than 1, but is typically in the 5-20 range.""}, {""name"": ""offset"", ""type"": ""float, default 0.85"", ""notes"": ""Adjusts smoothness versus responsiveness on a scale from 0 to 1; where 1 is max responsiveness.""}, {""name"": ""sigma"", ""type"": ""float, default 6"", ""notes"": ""Defines the width of the Gaussian normal distribution. Must be greater than 0.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""alma"", ""type"": ""float, Optional"", ""notes"": ""Arnaud Legoux Moving Average""}]"
Moving averages,Double Exponential Moving Average (DEMA),https://python.stockindicators.dev/indicators/Dema/#content,"""get_dema(quotes, lookback_periods)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int"", ""notes"": ""Number of periods (N) in the moving average. Must be greater than 0.""}]",[]
Moving averages,Endpoint Moving Average (EPMA),https://python.stockindicators.dev/indicators/Epma/#content,"""get_epma(quotes, lookback_periods)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int"", ""notes"": ""Number of periods (N) in the moving average. Must be greater than 0.""}]",[]
Moving averages,Exponential Moving Average (EMA),https://python.stockindicators.dev/indicators/Ema/#content,"""get_ema(quotes, lookback_periods, candle_part=CandlePart.CLOSE)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int"", ""notes"": ""Number of periods (N) in the moving average. Must be greater than 0.""}, {""name"": ""candle_part"", ""type"": ""CandlePart, default CandlePart.CLOSE"", ""notes"": ""Specify candle part to evaluate. See CandlePart options below.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""ema"", ""type"": ""float, Optional"", ""notes"": ""Exponential moving average""}]"
Moving averages,Hilbert Transform Instantaneous Trendline,https://python.stockindicators.dev/indicators/HtTrendline/#content,"""get_ht_trendline(quotes)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}]",[]
Moving averages,Hull Moving Average (HMA),https://python.stockindicators.dev/indicators/Hma/#content,"""get_hma(quotes, lookback_periods)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int"", ""notes"": ""Number of periods (N) in the moving average. Must be greater than 1.""}]",[]
Moving averages,Kaufman's Adaptive Moving Average (KAMA),https://python.stockindicators.dev/indicators/Kama/#content,"""get_kama(quotes, er_periods=10, fast_periods=2, slow_periods=30)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""er_periods"", ""type"": ""int, default 10"", ""notes"": ""Number of Efficiency Ratio (volatility) periods (E). Must be greater than 0.""}, {""name"": ""fast_periods"", ""type"": ""int, default 2"", ""notes"": ""Number of Fast EMA periods. Must be greater than 0.""}, {""name"": ""slow_periods"", ""type"": ""int, default 30"", ""notes"": ""Number of Slow EMA periods. Must be greater than fast_periods.""}]",[]
Moving averages,Least Squares Moving Average (LSMA),https://python.stockindicators.dev/indicators/Epma/#content,"""get_epma(quotes, lookback_periods)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int"", ""notes"": ""Number of periods (N) in the moving average. Must be greater than 0.""}]",[]
Moving averages,MESA Adaptive Moving Average (MAMA),https://python.stockindicators.dev/indicators/Mama/#content,"""get_mama(quotes, fast_limit=0.5, slow_limit=0.05)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""fast_limit"", ""type"": ""float, default 0.5"", ""notes"": ""Fast limit threshold. Must be greater than slowLimit and less than 1.""}, {""name"": ""slow_limit"", ""type"": ""float, default 0.05"", ""notes"": ""Slow limit threshold. Must be greater than 0.""}]",[]
Moving averages,McGinley Dynamic,https://python.stockindicators.dev/indicators/Dynamic/#content,"""get_dynamic(quotes, lookback_periods, k_factor=0.6)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int"", ""notes"": ""Number of periods (N) in the moving average. Must be greater than 0.""}, {""name"": ""k_factor"", ""type"": ""float, default 0.6"", ""notes"": ""Range adjustment factor (K). Must be greater than 0.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""dynamic"", ""type"": ""float, Optional"", ""notes"": ""McGinley Dynamic""}]"
Moving averages,Modified Moving Average (MMA),https://python.stockindicators.dev/indicators/Smma/#content,"""get_smma(quotes, lookback_periods)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int"", ""notes"": ""Number of periods (N) in the moving average. Must be greater than 0.""}]",[]
Moving averages,Running Moving Average (RMA),https://python.stockindicators.dev/indicators/Smma/#content,"""get_smma(quotes, lookback_periods)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int"", ""notes"": ""Number of periods (N) in the moving average. Must be greater than 0.""}]",[]
Moving averages,Simple Moving Average (SMA),https://python.stockindicators.dev/indicators/Sma/#content,"""get_sma(quotes, lookback_periods, candle_part=CandlePart.CLOSE)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int"", ""notes"": ""Number of periods (N) in the lookback window. Must be greater than 0.""}, {""name"": ""candle_part"", ""type"": ""CandlePart, default CandlePart.CLOSE"", ""notes"": ""Specify candle part to evaluate. See CandlePart options below.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""sma"", ""type"": ""float, Optional"", ""notes"": ""Simple moving average""}]"
Moving averages,Smoothed Moving Average (SMMA),https://python.stockindicators.dev/indicators/Smma/#content,"""get_smma(quotes, lookback_periods)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int"", ""notes"": ""Number of periods (N) in the moving average. Must be greater than 0.""}]",[]
Moving averages,Tillson T3 Moving Average,https://python.stockindicators.dev/indicators/T3/#content,"""get_t3(quotes, lookback_periods=5, volume_factor=0.7)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 5"", ""notes"": ""Number of periods (N) for the EMA smoothing. Must be greater than 0 and is usually less than 63.""}, {""name"": ""volume_factor"", ""type"": ""float, default 0.7"", ""notes"": ""Size of the Volume Factor. Must be greater than 0 and is usually less than 2.""}]",[]
Moving averages,Triple Exponential Moving Average (TEMA),https://python.stockindicators.dev/indicators/Tema/#content,"""get_tema(quotes, lookback_periods)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int"", ""notes"": ""Number of periods (N) in the moving average. Must be greater than 0.""}]",[]
Moving averages,Volume Weighted Average Price (VWAP),https://python.stockindicators.dev/indicators/Vwap/#content,"""get_vwap(quotes, start=None)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""start"", ""type"": ""datetime, Optional"", ""notes"": ""The anchor date used to start the VWAP accumulation. The earliest date in quotes is used when not provided.""}, {""name"": ""year, month, day, hour, minute"", ""type"": ""int, Optional"", ""notes"": ""The anchor date used to start the VWAP accumulation. The earliest date in quotes is used when not provided.""}]",[]
Moving averages,Volume Weighted Moving Average (VWMA),https://python.stockindicators.dev/indicators/Vwma/#content,"""get_vwma(quotes, lookback_periods)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int"", ""notes"": ""Number of periods (N) in the moving average. Must be greater than 0.""}]",[]
Moving averages,Weighted Moving Average (WMA),https://python.stockindicators.dev/indicators/Wma/#content,"""get_wma(quotes, lookback_periods, candle_part=CandlePart.CLOSE)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int"", ""notes"": ""Number of periods (N) in the moving average. Must be greater than 0.""}, {""name"": ""candle_part"", ""type"": ""CandlePart, default CandlePart.CLOSE"", ""notes"": ""Specify candle part to evaluate. See CandlePart options below.""}]",[]
Price transforms,Ehlers Fisher Transform,https://python.stockindicators.dev/indicators/FisherTransform/#content,"""get_fisher_transform(quotes, lookback_periods=10)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 10"", ""notes"": ""Number of periods (N) in the lookback window. Must be greater than 0.""}]",[]
Price transforms,Heikin-Ashi,https://python.stockindicators.dev/indicators/HeikinAshi/#content,"""get_heikin_ashi(quotes)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}]",[]
Price transforms,Renko Chart,https://python.stockindicators.dev/indicators/Renko/#content,"""get_renko(quotes, brick_size, end_type=EndType.CLOSE)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""brick_size"", ""type"": ""float"", ""notes"": ""Brick size. Must be greater than 0.""}, {""name"": ""end_type"", ""type"": ""EndType, default EndType.CLOSE"", ""notes"": ""See EndType options below.""}]",[]
Price transforms,Zig Zag,https://python.stockindicators.dev/indicators/ZigZag/#content,"""get_zig_zag(quotes, end_type=EndType.CLOSE, percent_change=5)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""end_type"", ""type"": ""EndType, default EndType.CLOSE"", ""notes"": ""Determines whether close or high/low are used to measure percent change. See EndType options below.""}, {""name"": ""percent_change"", ""type"": ""float, default 5"", ""notes"": ""Percent change required to establish a line endpoint. Example: 3.5% would be entered as 3.5 (not 0.035). Must be greater than 0. Typical values range from 3 to 10.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""zig_zag"", ""type"": ""Decimal, Optional"", ""notes"": ""Zig Zag line for percent_change""}, {""name"": ""point_type"", ""type"": ""str, Optional"", ""notes"": ""Zig Zag endpoint type (H for high point, L for low point)""}, {""name"": ""retrace_high"", ""type"": ""Decimal, Optional"", ""notes"": ""Retrace line for high points""}, {""name"": ""retrace_low"", ""type"": ""Decimal, Optional"", ""notes"": ""Retrace line for low points""}]"
Price characteristics,Average True Range (ATR),https://python.stockindicators.dev/indicators/Atr/#content,"""get_atr(quotes, lookback_periods=14)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 14"", ""notes"": ""Number of periods (N) to consider. Must be greater than 1.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""tr"", ""type"": ""float, Optional"", ""notes"": ""True Range for current period""}, {""name"": ""atr"", ""type"": ""float, Optional"", ""notes"": ""Average True Range""}, {""name"": ""atrp"", ""type"": ""float, Optional"", ""notes"": ""Average True Range Percent is (atr/Close Price)*100. This normalizes so it can be compared to other stocks.""}]"
Price characteristics,Balance of Power (BOP),https://python.stockindicators.dev/indicators/Bop/#content,"""get_bop(quotes, smooth_periods=14)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""smooth_periods"", ""type"": ""int, default 14"", ""notes"": ""Number of periods (N) for smoothing. Must be greater than 0.""}]",[]
Price characteristics,Bull and Bear Power,https://python.stockindicators.dev/indicators/ElderRay/#content,"""get_elder_ray(quotes, lookback_periods=13)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 13"", ""notes"": ""Number of periods (N) for the underlying EMA evaluation. Must be greater than 0.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""ema"", ""type"": ""float, Optional"", ""notes"": ""Exponential moving average of Close price""}, {""name"": ""bull_power"", ""type"": ""float, Optional"", ""notes"": ""Bull Power""}, {""name"": ""bear_power"", ""type"": ""float, Optional"", ""notes"": ""Bear Power""}]"
Price characteristics,Choppiness Index,https://python.stockindicators.dev/indicators/Chop/#content,"""get_chop(quotes, lookback_periods=14)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 14"", ""notes"": ""Number of periods (N) for the lookback evaluation. Must be greater than 1.""}]",[]
Price characteristics,Dominant Cycle Periods,https://python.stockindicators.dev/indicators/HtTrendline/#content,"""get_ht_trendline(quotes)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}]",[]
Price characteristics,Historical Volatility (HV),https://python.stockindicators.dev/indicators/StdDev/#content,"""get_stdev(quotes, lookback_periods, sma_periods=None)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int"", ""notes"": ""Number of periods (N) in the lookback period. Must be greater than 1 to calculate; however we suggest a larger period for statistically appropriate sample size.""}, {""name"": ""sma_periods"", ""type"": ""int, Optional"", ""notes"": ""Number of periods in the moving average of Stdev. Must be greater than 0, if specified.""}]",[]
Price characteristics,Hurst Exponent,https://python.stockindicators.dev/indicators/Hurst/#content,"""get_hurst(quotes, lookback_periods=100)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 100"", ""notes"": ""Number of periods (N) in the Hurst Analysis. Must be greater than 20.""}]",[]
Price characteristics,Momentum Oscillator,https://python.stockindicators.dev/indicators/Roc/#content,"""get_roc(quotes, lookback_periods, sma_periods=None)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int"", ""notes"": ""Number of periods (N) to go back. Must be greater than 0.""}, {""name"": ""sma_periods"", ""type"": ""int, Optional"", ""notes"": ""Number of periods in the moving average of ROC. Must be greater than 0, if specified.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""momentum"", ""type"": ""float, Optional"", ""notes"": ""Raw change in price over N periods""}, {""name"": ""roc"", ""type"": ""float, Optional"", ""notes"": ""Rate of Change over N lookback periods (%, not decimal)""}, {""name"": ""roc_sma"", ""type"": ""float, Optional"", ""notes"": ""Moving average (SMA) of ROC based on sma_periods periods, if specified""}]"
Price characteristics,Normalized Average True Range,https://python.stockindicators.dev/indicators/Atr/#content,"""get_atr(quotes, lookback_periods=14)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 14"", ""notes"": ""Number of periods (N) to consider. Must be greater than 1.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""tr"", ""type"": ""float, Optional"", ""notes"": ""True Range for current period""}, {""name"": ""atr"", ""type"": ""float, Optional"", ""notes"": ""Average True Range""}, {""name"": ""atrp"", ""type"": ""float, Optional"", ""notes"": ""Average True Range Percent is (atr/Close Price)*100. This normalizes so it can be compared to other stocks.""}]"
Price characteristics,Price Momentum Oscillator (PMO),https://python.stockindicators.dev/indicators/Pmo/#content,"""get_pmo(quotes, time_periods=35)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""time_periods"", ""type"": ""int, default 35"", ""notes"": ""Number of periods (T) for ROC EMA smoothing. Must be greater than 1.""}]",[]
Price characteristics,Price Relative Strength (PRS),https://python.stockindicators.dev/indicators/Prs/#content,"""get_prs(eval_history, base_history, lookback_periods=None, sma_periods=None)""","[{""name"": ""eval_history"", ""type"": ""Iterable[Quote]"", ""notes"": ""Historical quotes for evaluation. You must have the same number of periods as base_history.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""base_history"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.""}, {""name"": ""lookback_periods"", ""type"": ""int, Optional"", ""notes"": ""Number of periods (N) to lookback to compute % difference. Must be greater than 0 if specified or None.""}, {""name"": ""sma_periods"", ""type"": ""int, Optional"", ""notes"": ""Number of periods (S) in the SMA lookback period for prs. Must be greater than 0.""}]",[]
Price characteristics,Rate of Change (ROC),https://python.stockindicators.dev/indicators/Roc/#content,"""get_roc(quotes, lookback_periods, sma_periods=None)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int"", ""notes"": ""Number of periods (N) to go back. Must be greater than 0.""}, {""name"": ""sma_periods"", ""type"": ""int, Optional"", ""notes"": ""Number of periods in the moving average of ROC. Must be greater than 0, if specified.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""momentum"", ""type"": ""float, Optional"", ""notes"": ""Raw change in price over N periods""}, {""name"": ""roc"", ""type"": ""float, Optional"", ""notes"": ""Rate of Change over N lookback periods (%, not decimal)""}, {""name"": ""roc_sma"", ""type"": ""float, Optional"", ""notes"": ""Moving average (SMA) of ROC based on sma_periods periods, if specified""}]"
Price characteristics,Rescaled Range Analysis,https://python.stockindicators.dev/indicators/Hurst/#content,"""get_hurst(quotes, lookback_periods=100)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 100"", ""notes"": ""Number of periods (N) in the Hurst Analysis. Must be greater than 20.""}]",[]
Price characteristics,True Range (TR),https://python.stockindicators.dev/indicators/Atr/#content,"""get_atr(quotes, lookback_periods=14)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 14"", ""notes"": ""Number of periods (N) to consider. Must be greater than 1.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""tr"", ""type"": ""float, Optional"", ""notes"": ""True Range for current period""}, {""name"": ""atr"", ""type"": ""float, Optional"", ""notes"": ""Average True Range""}, {""name"": ""atrp"", ""type"": ""float, Optional"", ""notes"": ""Average True Range Percent is (atr/Close Price)*100. This normalizes so it can be compared to other stocks.""}]"
Price characteristics,True Strength Index (TSI),https://python.stockindicators.dev/indicators/Tsi/#content,"""get_tsi(quotes, lookback_periods=25,smooth_periods=13, signal_periods=7)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 25"", ""notes"": ""Number of periods (N) for the first EMA. Must be greater than 0.""}, {""name"": ""smooth_periods"", ""type"": ""int, default 13"", ""notes"": ""Number of periods (M) for the second smoothing. Must be greater than 0.""}, {""name"": ""signal_periods"", ""type"": ""int, default 7"", ""notes"": ""Number of periods (S) in the TSI moving average. Must be greater than or equal to 0.""}]",[]
Price characteristics,Ulcer Index (UI),https://python.stockindicators.dev/indicators/UlcerIndex/#content,"""get_ulcer_index(quotes, lookback_periods=14)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 14"", ""notes"": ""Number of periods (N) for review. Must be greater than 0.""}]",[]
