type,name,url,function_definition,parameters,return
Price trends,ATR Trailing Stop,https://python.stockindicators.dev/indicators/AtrStop/#content,"""get_atr_stop(quotes, lookback_periods=21, multiplier=3, end_type=EndType.CLOSE)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 21"", ""notes"": ""Number of periods (N) for the ATR evaluation. Must be greater than 1.""}, {""name"": ""multiplier"", ""type"": ""float, default 3"", ""notes"": ""Multiplier sets the ATR band width. Must be greater than 0 and is usually set around 2 to 3.""}, {""name"": ""end_type"", ""type"": ""EndType, default EndType.Close"", ""notes"": ""Determines whether Close or High/Low is used as basis for stop offset. See EndType options below.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""atr_stop"", ""type"": ""Decimal, Optional"", ""notes"": ""ATR Trailing Stop line contains both Upper and Lower segments""}, {""name"": ""buy_stop"", ""type"": ""Decimal, Optional"", ""notes"": ""Upper band only (green)""}, {""name"": ""sell_stop"", ""type"": ""Decimal, Optional"", ""notes"": ""Lower band only (red)""}]"
Price trends,Aroon,https://python.stockindicators.dev/indicators/Aroon/#content,"""get_aroon(quotes, lookback_periods=25)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 25"", ""notes"": ""Number of periods (N) for the lookback evaluation. Must be greater than 0.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""aroon_up"", ""type"": ""float, Optional"", ""notes"": ""Based on last High price""}, {""name"": ""aroon_down"", ""type"": ""float, Optional"", ""notes"": ""Based on last Low price""}, {""name"": ""oscillator"", ""type"": ""float, Optional"", ""notes"": ""AroonUp - AroonDown""}]"
Price channels,Bollinger BandsÂ∫ê,https://python.stockindicators.dev/indicators/BollingerBands/#content,"""get_bollinger_bands(quotes, lookback_periods=20, standard_deviations=2)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 20"", ""notes"": ""Number of periods (N) for the center line moving average. Must be greater than 1 to calculate; however we suggest a larger period for statistically appropriate sample size.""}, {""name"": ""standard_deviations"", ""type"": ""int, default 2"", ""notes"": ""Width of bands. Standard deviations (D) from the moving average. Must be greater than 0.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""sma"", ""type"": ""float, Optional"", ""notes"": ""Simple moving average (SMA) of Close price (center line)""}, {""name"": ""upper_band"", ""type"": ""float, Optional"", ""notes"": ""Upper line is D standard deviations above the SMA""}, {""name"": ""lower_band"", ""type"": ""float, Optional"", ""notes"": ""Lower line is D standard deviations below the SMA""}, {""name"": ""percent_b"", ""type"": ""float, Optional"", ""notes"": ""%B is the location within the bands. (Price-lower_band)/(upper_band-lower_band)""}, {""name"": ""z_score"", ""type"": ""float, Optional"", ""notes"": ""Z-Score of current Close price (number of standard deviations from mean)""}, {""name"": ""width"", ""type"": ""float, Optional"", ""notes"": ""Width as percent of SMA price. (upper_band-lower_band)/sma""}]"
Price channels,Donchian Channels,https://python.stockindicators.dev/indicators/Donchian/#content,"""get_donchian(quotes, lookback_periods=20)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 20"", ""notes"": ""Number of periods (N) for lookback period. Must be greater than 0 to calculate; however we suggest a larger value for an appropriate sample size.""}]",[]
Oscillators,Awesome Oscillator (AO),https://python.stockindicators.dev/indicators/Awesome/#content,"""get_awesome(quotes, fast_periods=5, slow_periods=34)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""fast_periods"", ""type"": ""int, default 5"", ""notes"": ""Number of periods (F) for the faster moving average. Must be greater than 0.""}, {""name"": ""slow_periods"", ""type"": ""int, default 34"", ""notes"": ""Number of periods (S) for the slower moving average. Must be greater than fast_periods.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""oscillator"", ""type"": ""float, Optional"", ""notes"": ""Awesome Oscillator""}, {""name"": ""normalized"", ""type"": ""float, Optional"", ""notes"": ""100 \u00d7 oscillator \u00f7 (median price)""}]"
Oscillators,Chande Momentum Oscillator (CMO),https://python.stockindicators.dev/indicators/Cmo/#content,"""get_cmo(quotes, lookback_periods)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int"", ""notes"": ""Number of periods (N) in the lookback window. Must be greater than 0.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""cmo"", ""type"": ""float, Optional"", ""notes"": ""Chande Momentum Oscillator""}]"
Stop and reverse,Chandelier Exit,https://python.stockindicators.dev/indicators/Chandelier/#content,"""get_chandelier(quotes, lookback_periods=22, multiplier=3.0, chandelier_type=ChandelierType.LONG)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 22"", ""notes"": ""Number of periods (N) for the lookback evaluation.""}, {""name"": ""multiplier"", ""type"": ""float, default 3.0"", ""notes"": ""Multiplier number must be a positive value.""}, {""name"": ""chandelier_type"", ""type"": ""ChandelierType, default ChandelierType.LONG"", ""notes"": ""Direction of exit. See ChandelierType options below.""}]",[]
Stop and reverse,Parabolic SAR,https://python.stockindicators.dev/indicators/ParabolicSar/#content,"""get_parabolic_sar(quotes, acceleration_step=0.02, max_acceleration_factor=0.2)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""acceleration_step"", ""type"": ""float, default 0.02"", ""notes"": ""Incremental step size for the Acceleration Factor. Must be greater than 0.""}, {""name"": ""max_acceleration_factor"", ""type"": ""float, default 0.2"", ""notes"": ""Maximum factor limit. Must be greater than acceleration_step.""}, {""name"": ""initial_factor"", ""type"": ""float"", ""notes"": ""Initial Acceleration Factor. Must be greater than 0 and not larger than max_acceleration_factor. Default is acceleration_step.""}]",[]
Candlestick patterns,Doji (Preview),https://python.stockindicators.dev/indicators/Doji/#content,"""get_doji(quotes, max_price_change_percent=0.1)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""max_price_change_percent"", ""type"": ""float, default 0.1"", ""notes"": ""Optional. Maximum absolute percent difference in open and close price. Example: 0.3% would be entered as 0.3 (not 0.003). Must be between 0 and 0.5 percent, if specified.""}]",[]
Candlestick patterns,Marubozu (Preview),https://python.stockindicators.dev/indicators/Marubozu/#content,"""get_marubozu(quotes, min_body_percent=95)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""min_body_percent"", ""type"": ""float, default 95"", ""notes"": ""Optional. Minimum body size as a percent of total candle size. Example: 85% would be entered as 85 (not 0.85). Must be between 80 and 100, if specified.""}]",[]
Volume-based,Accumulation / Distribution Line (ADL),https://python.stockindicators.dev/indicators/Adl/#content,"""get_adl(quotes, sma_periods=None)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""sma_periods"", ""type"": ""int, Optional"", ""notes"": ""Number of periods (N) in the moving average of ADL. Must be greater than 0, if specified.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""money_flow_multiplier"", ""type"": ""float, Optional"", ""notes"": ""Money Flow Multiplier""}, {""name"": ""money_flow_volume"", ""type"": ""float, Optional"", ""notes"": ""Money Flow Volume""}, {""name"": ""adl"", ""type"": ""float"", ""notes"": ""Accumulation Distribution Line (ADL)""}, {""name"": ""adl_sma"", ""type"": ""float, Optional"", ""notes"": ""Moving average (SMA) of ADL based on sma_periods periods, if specified""}]"
Volume-based,Chaikin Money Flow (CMF),https://python.stockindicators.dev/indicators/Cmf/#content,"""get_cmf(quotes, lookback_periods=20)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 20"", ""notes"": ""Number of periods (N) in the moving average. Must be greater than 0.""}]",[]
Moving averages,Arnaud Legoux Moving Average (ALMA),https://python.stockindicators.dev/indicators/Alma/#content,"""get_alma(quotes, lookback_periods=9, offset=0.85, sigma=6)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 9"", ""notes"": ""Number of periods (N) in the moving average. Must be greater than 1, but is typically in the 5-20 range.""}, {""name"": ""offset"", ""type"": ""float, default 0.85"", ""notes"": ""Adjusts smoothness versus responsiveness on a scale from 0 to 1; where 1 is max responsiveness.""}, {""name"": ""sigma"", ""type"": ""float, default 6"", ""notes"": ""Defines the width of the Gaussian normal distribution. Must be greater than 0.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""alma"", ""type"": ""float, Optional"", ""notes"": ""Arnaud Legoux Moving Average""}]"
Moving averages,Double Exponential Moving Average (DEMA),https://python.stockindicators.dev/indicators/Dema/#content,"""get_dema(quotes, lookback_periods)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int"", ""notes"": ""Number of periods (N) in the moving average. Must be greater than 0.""}]",[]
Price transforms,Ehlers Fisher Transform,https://python.stockindicators.dev/indicators/FisherTransform/#content,"""get_fisher_transform(quotes, lookback_periods=10)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 10"", ""notes"": ""Number of periods (N) in the lookback window. Must be greater than 0.""}]",[]
Price transforms,Heikin-Ashi,https://python.stockindicators.dev/indicators/HeikinAshi/#content,"""get_heikin_ashi(quotes)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}]",[]
Price characteristics,Average True Range (ATR),https://python.stockindicators.dev/indicators/Atr/#content,"""get_atr(quotes, lookback_periods=14)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""lookback_periods"", ""type"": ""int, default 14"", ""notes"": ""Number of periods (N) to consider. Must be greater than 1.""}]","[{""name"": ""date"", ""type"": ""datetime"", ""notes"": ""Date""}, {""name"": ""tr"", ""type"": ""float, Optional"", ""notes"": ""True Range for current period""}, {""name"": ""atr"", ""type"": ""float, Optional"", ""notes"": ""Average True Range""}, {""name"": ""atrp"", ""type"": ""float, Optional"", ""notes"": ""Average True Range Percent is (atr/Close Price)*100. This normalizes so it can be compared to other stocks.""}]"
Price characteristics,Balance of Power (BOP),https://python.stockindicators.dev/indicators/Bop/#content,"""get_bop(quotes, smooth_periods=14)""","[{""name"": ""quotes"", ""type"": ""Iterable[Quote]"", ""notes"": ""Iterable of the Quote class or its sub-class.  \u2022 See here for usage with pandas.DataFrame""}, {""name"": ""smooth_periods"", ""type"": ""int, default 14"", ""notes"": ""Number of periods (N) for smoothing. Must be greater than 0.""}]",[]
